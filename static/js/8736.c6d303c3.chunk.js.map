{"version":3,"file":"static/js/8736.c6d303c3.chunk.js","mappings":"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","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/create-Du0Xo8xc.mjs","../node_modules/@wormhole-foundation/wormhole-connect/lib/index-B512u2Lt.mjs"],"sourcesContent":["import { cW as f, cX as d, cY as y, cZ as A, cF as p, cT as x, c_ as h, c$ as F, d0 as L } from \"./index-DV1w5RNX.mjs\";\nfunction a(o, r) {\n  switch (o.binary) {\n    case \"bytes\":\n      if (\"layout\" in o) {\n        const { custom: t } = o;\n        return t === void 0 || typeof t.from != \"function\" ? e(o.layout, t ? t.from : r) : r;\n      }\n    case \"int\":\n    case \"uint\": {\n      const { custom: t } = o;\n      return o != null && o.omit ? void 0 : d(t) ? t : y(t) ? t.to : r;\n    }\n    case \"array\":\n      return Array.isArray(r) ? r.map((t) => e(o.layout, t)) : void 0;\n    case \"switch\": {\n      const t = r[o.idTag ?? \"id\"], [s, n] = o.layouts.find(([c]) => (Array.isArray(c) ? c[1] : c) == t);\n      return {\n        [o.idTag ?? \"id\"]: t,\n        ...e(n, r)\n      };\n    }\n  }\n}\nfunction e(o, r) {\n  if (r = r ?? {}, f(o))\n    return a(o, r);\n  const t = {};\n  for (const s of o) {\n    const n = a(s, r[s.name] ?? {});\n    n !== void 0 && (t[s.name] = n);\n  }\n  return t;\n}\nfunction i(o, r) {\n  return e(o, r);\n}\nfunction u(o) {\n  return [...h, F(o)];\n}\nfunction b(o, r) {\n  const [t, s] = A(o), n = i(u(o), r);\n  return {\n    protocolName: t,\n    payloadName: s,\n    payloadLiteral: o,\n    ...i(L, r),\n    ...n,\n    hash: p(x(u(o), n))\n  };\n}\nexport {\n  b as c\n};\n","var d = Object.defineProperty;\nvar h = (i, e, r) => e in i ? d(i, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : i[e] = r;\nvar n = (i, e, r) => (h(i, typeof e != \"symbol\" ? e + \"\" : e, r), r);\nimport { S as m, o as w, _ as p } from \"./sui-BQWCExPY.mjs\";\nimport { bW as g } from \"./index-DV1w5RNX.mjs\";\nimport { c as l } from \"./create-Du0Xo8xc.mjs\";\nimport { r as u } from \"./chain-tk4BDPwT.mjs\";\nclass c {\n  constructor(e, r, t, o) {\n    n(this, \"network\");\n    n(this, \"chain\");\n    n(this, \"provider\");\n    n(this, \"contracts\");\n    n(this, \"chainId\");\n    n(this, \"coreBridgePackageId\");\n    this.network = e, this.chain = r, this.provider = t, this.contracts = o, this.chainId = g(r);\n    const s = o.coreBridge;\n    if (!s)\n      throw new Error(`CoreBridge contract Address for chain ${r} not found`);\n    this.coreBridgePackageId = s;\n  }\n  getGuardianSet(e) {\n    throw new Error(\"Method not implemented.\");\n  }\n  getMessageFee() {\n    throw new Error(\"Method not implemented.\");\n  }\n  static async fromRpc(e, r) {\n    const [t, o] = await m.chainFromRpc(e), s = r[o];\n    if (s.network !== t)\n      throw new Error(`Network mismatch: ${s.network} !== ${t}`);\n    return new c(t, o, e, s.contracts);\n  }\n  async *verifyMessage(e, r) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async *publishMessage(e, r) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async parseTransaction(e) {\n    return (await this.parseMessages(e)).map((t) => ({\n      emitter: t.emitterAddress,\n      sequence: t.sequence,\n      chain: this.chain\n    }));\n  }\n  async getGuardianSetIndex() {\n    throw new Error(\"Method not implemented.\");\n  }\n  async parseMessages(e) {\n    var o;\n    const t = (o = (await this.provider.getTransactionBlock({\n      digest: e,\n      options: { showEvents: !0, showEffects: !0, showInput: !0 }\n    })).events) == null ? void 0 : o.filter((s) => s.type.endsWith(\"WormholeMessage\"));\n    if (!t || t.length == 0)\n      throw new Error(\"WormholeMessage not found\");\n    return t.map((s) => {\n      const a = s.parsedJson;\n      return l(\"Uint8Array\", {\n        emitterChain: this.chain,\n        emitterAddress: new w(a.sender).toUniversalAddress(),\n        sequence: BigInt(a.sequence),\n        guardianSet: 0,\n        // TODO: need to implement guardian set idx\n        timestamp: Number(a.timestamp),\n        consistencyLevel: a.consistency_level,\n        nonce: a.nonce,\n        signatures: [],\n        payload: new Uint8Array(a.payload)\n      });\n    });\n  }\n}\nu(p, \"WormholeCore\", c);\nexport {\n  c as SuiWormholeCore\n};\n"],"names":["a","o","r","binary","custom","t","from","e","layout","omit","d","y","to","Array","isArray","map","idTag","s","n","layouts","find","_ref","c","f","name","i","u","h","F","b","A","protocolName","payloadName","payloadLiteral","L","hash","p","x","Object","defineProperty","enumerable","configurable","writable","value","constructor","this","network","chain","provider","contracts","chainId","g","coreBridge","Error","coreBridgePackageId","getGuardianSet","getMessageFee","fromRpc","m","chainFromRpc","verifyMessage","publishMessage","parseTransaction","parseMessages","emitter","emitterAddress","sequence","getGuardianSetIndex","getTransactionBlock","digest","options","showEvents","showEffects","showInput","events","filter","type","endsWith","length","parsedJson","l","emitterChain","w","sender","toUniversalAddress","BigInt","guardianSet","timestamp","Number","consistencyLevel","consistency_level","nonce","signatures","payload","Uint8Array"],"sourceRoot":""}