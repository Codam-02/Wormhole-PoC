{"version":3,"file":"static/js/8971.d424e358.chunk.js","mappings":"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","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/create-Du0Xo8xc.mjs","../node_modules/@wormhole-foundation/wormhole-connect/lib/index-C1QICiJl.mjs","../node_modules/@wormhole-foundation/wormhole-connect/lib/index-FlkP7OMm.mjs"],"sourcesContent":["import { cW as f, cX as d, cY as y, cZ as A, cF as p, cT as x, c_ as h, c$ as F, d0 as L } from \"./index-DV1w5RNX.mjs\";\nfunction a(o, r) {\n  switch (o.binary) {\n    case \"bytes\":\n      if (\"layout\" in o) {\n        const { custom: t } = o;\n        return t === void 0 || typeof t.from != \"function\" ? e(o.layout, t ? t.from : r) : r;\n      }\n    case \"int\":\n    case \"uint\": {\n      const { custom: t } = o;\n      return o != null && o.omit ? void 0 : d(t) ? t : y(t) ? t.to : r;\n    }\n    case \"array\":\n      return Array.isArray(r) ? r.map((t) => e(o.layout, t)) : void 0;\n    case \"switch\": {\n      const t = r[o.idTag ?? \"id\"], [s, n] = o.layouts.find(([c]) => (Array.isArray(c) ? c[1] : c) == t);\n      return {\n        [o.idTag ?? \"id\"]: t,\n        ...e(n, r)\n      };\n    }\n  }\n}\nfunction e(o, r) {\n  if (r = r ?? {}, f(o))\n    return a(o, r);\n  const t = {};\n  for (const s of o) {\n    const n = a(s, r[s.name] ?? {});\n    n !== void 0 && (t[s.name] = n);\n  }\n  return t;\n}\nfunction i(o, r) {\n  return e(o, r);\n}\nfunction u(o) {\n  return [...h, F(o)];\n}\nfunction b(o, r) {\n  const [t, s] = A(o), n = i(u(o), r);\n  return {\n    protocolName: t,\n    payloadName: s,\n    payloadLiteral: o,\n    ...i(L, r),\n    ...n,\n    hash: p(x(u(o), n))\n  };\n}\nexport {\n  b as c\n};\n","var J = Object.defineProperty;\nvar Q = (O, s, t) => s in O ? J(O, s, { enumerable: !0, configurable: !0, writable: !0, value: t }) : O[s] = t;\nvar d = (O, s, t) => (Q(O, typeof s != \"symbol\" ? s + \"\" : s, t), t);\nimport { A as b, S as g, a as X } from \"./index-FlkP7OMm.mjs\";\nimport { dc as Y, b3 as C, bW as $, d1 as q, dd as _, d4 as L, cE as Z, aA as S, as as tt, cj as H, d5 as y, d6 as k, d9 as W, cw as D, ax as et, cb as K, de as st, df as z, dg as ot } from \"./index-DV1w5RNX.mjs\";\nimport { a as nt, A as l, s as u, _ as rt } from \"./algorand-CuJwCvKw.mjs\";\nimport { r as at } from \"./chain-tk4BDPwT.mjs\";\nconst V = Y.fromSignature(\"portal_transfer(byte[])byte[]\"), c = class c {\n  constructor(s, t, n, o) {\n    d(this, \"network\");\n    d(this, \"chain\");\n    d(this, \"connection\");\n    d(this, \"contracts\");\n    d(this, \"chainId\");\n    d(this, \"coreBridge\");\n    d(this, \"coreAppId\");\n    d(this, \"coreAppAddress\");\n    d(this, \"tokenBridgeAppId\");\n    d(this, \"tokenBridgeAddress\");\n    if (this.network = s, this.chain = t, this.connection = n, this.contracts = o, this.chainId = $(t), !o.coreBridge)\n      throw new Error(`Core contract address for chain ${t} not found`);\n    const r = BigInt(o.coreBridge);\n    if (this.coreAppId = r, this.coreAppAddress = q(r), this.coreBridge = new b(s, t, n, o), !o.tokenBridge)\n      throw new Error(`TokenBridge contract address for chain ${t} not found`);\n    const a = BigInt(o.tokenBridge);\n    this.tokenBridgeAppId = a, this.tokenBridgeAddress = q(a);\n  }\n  static async fromRpc(s, t) {\n    const [n, o] = await nt.chainFromRpc(s), r = t[o];\n    if (r.network !== n)\n      throw new Error(`Network mismatch: ${r.network} != ${n}`);\n    return new c(n, o, s, r.contracts);\n  }\n  // Checks a native address to see if it's a wrapped version\n  async isWrappedAsset(s) {\n    const t = new l(s).toInt();\n    if (t === 0)\n      return !1;\n    const n = await this.connection.getAssetByID(t).do(), r = _.from_obj_for_encoding(n).params.creator, a = await this.connection.accountInformation(r).exclude(\"all\").do(), e = L.from_obj_for_encoding(a);\n    return (e == null ? void 0 : e.authAddr) === this.tokenBridgeAddress;\n  }\n  // Returns the original asset with its foreign chain\n  async getOriginalAsset(s) {\n    const t = new l(s).toInt(), n = await this.connection.getAssetByID(t).do(), o = _.from_obj_for_encoding(n), r = await g.decodeLocalState(this.connection, this.tokenBridgeAppId, o.params.creator);\n    if (r.length < 94)\n      throw new Error(\"Invalid local state data\");\n    const a = r.slice(92, 94), e = Z(S.decode(a)), p = new tt(r.slice(60, 92));\n    return { chain: e, address: p };\n  }\n  // Returns the address of the native version of this asset\n  async getWrappedAsset(s) {\n    const t = g.forWrappedAsset(this.tokenBridgeAppId, s), n = await g.decodeLocalState(this.connection, this.tokenBridgeAppId, t.address());\n    if (n.length < 8)\n      throw new Error(\"Invalid wrapped asset data\");\n    return H(this.chain, S.decode(n.slice(0, 8)).toString());\n  }\n  // Checks if a wrapped version exists\n  async hasWrappedAsset(s) {\n    try {\n      return await this.getWrappedAsset(s), !0;\n    } catch {\n    }\n    return !1;\n  }\n  async getWrappedNative() {\n    return H(this.chain, \"0\");\n  }\n  async isTransferCompleted(s) {\n    const t = g.forMessageId(this.tokenBridgeAppId, {\n      sequence: s.sequence,\n      chain: s.emitterChain,\n      emitter: s.emitterAddress\n    });\n    try {\n      return await g.checkBitsSet(this.connection, this.tokenBridgeAppId, t.address(), s.sequence);\n    } catch {\n    }\n    return !1;\n  }\n  // Creates a Token Attestation VAA containing metadata about\n  // the token that may be submitted to a Token Bridge on another chain\n  // to allow it to create a wrapped version of the token\n  async *createAttestation(s, t) {\n    if (!t)\n      throw new Error(\"Payer required to create attestation\");\n    const n = new l(t).toString(), o = new l(s).toInt(), r = [], a = await this.connection.getTransactionParams().do(), e = g.forEmitter(this.coreAppId, new l(this.tokenBridgeAddress).toUint8Array()), { accounts: [p], txs: w } = await b.maybeCreateStorageTx(this.connection, n, this.coreAppId, e, a);\n    r.push(...w);\n    let f = \"\", i;\n    if (o !== 0) {\n      const m = await this.connection.getAssetByID(o).do(), U = _.from_obj_for_encoding(m), E = await this.connection.accountInformation(U.params.creator).do();\n      if (i = L.from_obj_for_encoding(E), i.authAddr === this.tokenBridgeAddress.toString())\n        throw new Error(\"Cannot re-attest wormhole assets\");\n    }\n    const T = g.forNativeAsset(this.tokenBridgeAppId, BigInt(o)), B = await b.maybeCreateStorageTx(this.connection, n, this.tokenBridgeAppId, T);\n    f = B.accounts[0], r.push(...B.txs);\n    const I = y({\n      from: n,\n      appIndex: u(this.tokenBridgeAppId),\n      onComplete: k.NoOpOC,\n      appArgs: [c.noop],\n      suggestedParams: a\n    });\n    r.push({ tx: I });\n    const A = await this.coreBridge.getMessageFee();\n    if (A > BigInt(0)) {\n      const m = W({\n        from: n,\n        suggestedParams: a,\n        to: this.tokenBridgeAddress,\n        amount: A\n      });\n      r.push({ tx: m });\n    }\n    let j = [p, f, this.coreAppAddress];\n    i && j.push(i.address);\n    let h = y({\n      appArgs: [c.attestToken, S.toBytes(o, 8)],\n      accounts: j,\n      appIndex: u(this.tokenBridgeAppId),\n      foreignApps: [u(this.coreAppId)],\n      foreignAssets: [o],\n      from: n,\n      onComplete: k.NoOpOC,\n      suggestedParams: a\n    });\n    A > BigInt(0) ? h.fee *= 3 : h.fee *= 2, r.push({ tx: h });\n    for (const m of r)\n      yield this.createUnsignedTx(m, \"TokenBridge.createAttestation\", !0);\n  }\n  // Submits the Token Attestation VAA to the Token Bridge\n  // to create the wrapped token represented by the data in the VAA\n  async *submitAttestation(s, t, n) {\n    if (!t)\n      throw new Error(\"Sender required to submit attestation\");\n    n || (n = await this.connection.getTransactionParams().do());\n    const o = t.toString(), a = g.forWrappedAsset(this.tokenBridgeAppId, s.payload.token).address(), e = [], p = [], w = await g.decodeLocalState(this.connection, this.tokenBridgeAppId, a);\n    w.length > 8 && p.push(new l(w.slice(0, 8)).toInt()), e.push({\n      tx: W({\n        from: o,\n        to: a,\n        amount: 1e5,\n        suggestedParams: n\n      })\n    });\n    let f = new Uint8Array(1);\n    f[0] = 1, e.push({\n      tx: y({\n        appArgs: [c.noop, f],\n        appIndex: u(this.tokenBridgeAppId),\n        from: o,\n        onComplete: k.NoOpOC,\n        suggestedParams: n\n      })\n    }), f = new Uint8Array(1), f[0] = 2, e.push({\n      tx: y({\n        appArgs: [c.noop, f],\n        appIndex: u(this.tokenBridgeAppId),\n        from: o,\n        onComplete: k.NoOpOC,\n        suggestedParams: n\n      })\n    }), e.push({\n      tx: y({\n        accounts: [],\n        appArgs: [c.receiveAttest, D(s)],\n        appIndex: u(this.tokenBridgeAppId),\n        foreignAssets: p,\n        from: o,\n        onComplete: k.NoOpOC,\n        suggestedParams: n\n      })\n    }), e[e.length - 1].tx.fee = e[e.length - 1].tx.fee * 2;\n    for (const i of e)\n      yield this.createUnsignedTx(i, \"TokenBridge.submitAttestation\", !0);\n  }\n  async *transfer(s, t, n, o, r) {\n    const a = s.toString(), e = et(n) ? 0 : new l(n).toInt(), p = o, w = $(t.chain), f = t.address.toUniversalAddress().toUint8Array(), i = await this.connection.getTransactionParams().do(), T = BigInt(0), B = g.fromData({\n      appId: this.coreAppId,\n      appAddress: K(this.coreAppAddress).publicKey,\n      idx: BigInt(0),\n      address: K(this.tokenBridgeAddress).publicKey\n    }), I = [], { accounts: [A], txs: j } = await b.maybeCreateStorageTx(this.connection, a, this.coreAppId, B, i);\n    I.push(...j);\n    let h = \"\", m, U = !1;\n    if (e !== 0) {\n      const x = await this.connection.getAssetByID(e).do();\n      h = _.from_obj_for_encoding(x).params.creator;\n      const R = await this.connection.accountInformation(h).do();\n      m = L.from_obj_for_encoding(R), U = m.authAddr === this.tokenBridgeAddress.toString();\n    }\n    const E = await this.coreBridge.getMessageFee();\n    if (E > 0 && I.push({\n      tx: W({\n        from: a,\n        to: this.tokenBridgeAddress,\n        amount: E,\n        suggestedParams: i\n      })\n    }), !U) {\n      const x = g.forNativeAsset(this.tokenBridgeAppId, BigInt(e)), { accounts: [N], txs: R } = await b.maybeCreateStorageTx(this.connection, a, this.tokenBridgeAppId, x, i);\n      h = N, R.push(...R);\n    }\n    if (e !== 0 && !await c.isOptedInToAsset(this.connection, h, e)) {\n      const x = W({\n        from: a,\n        to: h,\n        amount: 1e5,\n        suggestedParams: i\n      });\n      let N = y({\n        from: a,\n        appIndex: u(this.tokenBridgeAppId),\n        onComplete: k.NoOpOC,\n        appArgs: [c.optIn, st(e, 8)],\n        foreignAssets: [e],\n        accounts: [h],\n        suggestedParams: i\n      });\n      N.fee *= 2, I.unshift({ tx: x }, { tx: N });\n    }\n    const G = y({\n      from: a,\n      appIndex: u(this.tokenBridgeAppId),\n      onComplete: k.NoOpOC,\n      appArgs: [c.noop],\n      suggestedParams: i\n    });\n    I.push({ tx: G });\n    let F = [];\n    if (e === 0) {\n      const x = W({\n        from: a,\n        to: h,\n        amount: p,\n        suggestedParams: i\n      });\n      I.push({ tx: x }), F = [A, h, h];\n    } else {\n      const x = z({\n        from: a,\n        to: h,\n        amount: p,\n        assetIndex: e,\n        suggestedParams: i\n      });\n      I.push({ tx: x }), F = m != null && m.address ? [A, h, m.address] : [A, h];\n    }\n    const P = [\n      c.sendTransfer,\n      S.toBytes(e, 8),\n      S.toBytes(p, 8),\n      f,\n      S.toBytes(w, 8),\n      S.toBytes(T, 8)\n    ];\n    r && P.push(r);\n    const v = y({\n      from: a,\n      appIndex: u(this.tokenBridgeAppId),\n      onComplete: k.NoOpOC,\n      appArgs: P,\n      foreignApps: [u(this.coreAppId)],\n      foreignAssets: [e],\n      accounts: F,\n      suggestedParams: i\n    });\n    v.fee *= 2, I.push({ tx: v });\n    for (const x of I)\n      yield this.createUnsignedTx(x, \"TokenBridge.transfer\", !0);\n  }\n  async *redeem(s, t, n = !0, o) {\n    o || (o = await this.connection.getTransactionParams().do());\n    const r = new l(s).toString(), { accounts: a, txs: e } = await b.submitVAAHeader(this.connection, this.coreAppId, this.tokenBridgeAppId, t, r);\n    let p, w = \"\", f = [], i = 0;\n    if (t.payload.token.chain !== this.chain) {\n      p = g.forWrappedAsset(this.tokenBridgeAppId, t.payload.token), w = p.address();\n      const A = await g.decodeLocalState(this.connection, this.tokenBridgeAppId, w);\n      i = new l(A.slice(0, 8)).toInt();\n    } else {\n      const A = new l(t.payload.token.address).toBigInt();\n      p = g.forNativeAsset(this.tokenBridgeAppId, A), w = p.address(), i = u(A);\n    }\n    a.push(w);\n    let T = 0, B = \"\";\n    if (t.payloadName === \"TransferWithPayload\" ? (T = new l(t.payload.to.address).toInt(), B = q(T)) : B = new l(t.payload.to.address.toUint8Array()).toString(), a.push(B), i !== 0 && (f.push(i), !await c.isOptedInToAsset(this.connection, B, i))) {\n      if (r != B)\n        throw new Error(\"Cannot ASA optin for somebody else (asset \" + i.toString() + \")\");\n      e.unshift({\n        tx: z({\n          amount: 0,\n          assetIndex: i,\n          from: r,\n          suggestedParams: o,\n          to: r\n        })\n      });\n    }\n    const I = {\n      accounts: a,\n      appArgs: [c.completeTransfer, D(t)],\n      appIndex: u(this.tokenBridgeAppId),\n      foreignAssets: f,\n      from: r,\n      onComplete: k.NoOpOC,\n      suggestedParams: o\n    };\n    e.push({\n      tx: y(I)\n    }), e[e.length - 1].tx.fee = e[e.length - 1].tx.fee * (t.payloadName === \"Transfer\" && t.payload.fee !== void 0 && t.payload.fee === 0n ? 2 : 3), t.payloadName === \"TransferWithPayload\" && (e[e.length - 1].tx.appForeignApps = [T], e.push({\n      tx: y({\n        appArgs: [\n          V.getSelector(),\n          V.args[0].type.encode(D(t))\n        ],\n        appIndex: T,\n        foreignAssets: f,\n        from: r,\n        onComplete: k.NoOpOC,\n        suggestedParams: o\n      })\n    }));\n    for (const A of e)\n      yield this.createUnsignedTx(A, \"TokenBridge.redeem\", !0);\n  }\n  /**\n   * Checks if the asset has been opted in by the receiver\n   * @param client Algodv2 client\n   * @param asset Algorand asset index\n   * @param receiver Account address\n   * @returns Promise with True if the asset was opted in, False otherwise\n   */\n  static async isOptedInToAsset(s, t, n) {\n    var o;\n    try {\n      const r = await s.accountAssetInformation(t, n).do();\n      return (((o = ot.from_obj_for_encoding(r).assetHolding) == null ? void 0 : o.amount) ?? 0) > 0;\n    } catch {\n    }\n    return !1;\n  }\n  createUnsignedTx(s, t, n = !0) {\n    return new X(s, this.network, this.chain, t, n);\n  }\n};\nd(c, \"sendTransfer\", C.encode(\"sendTransfer\")), d(c, \"attestToken\", C.encode(\"attestToken\")), d(c, \"noop\", C.encode(\"nop\")), d(c, \"optIn\", C.encode(\"optin\")), d(c, \"completeTransfer\", C.encode(\"completeTransfer\")), d(c, \"receiveAttest\", C.encode(\"receiveAttest\"));\nlet M = c;\nat(rt, \"TokenBridge\", M);\nexport {\n  M as AlgorandTokenBridge,\n  V as TransferMethodSelector\n};\n","var se = Object.defineProperty;\nvar oe = (s, e, t) => e in s ? se(s, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : s[e] = t;\nvar d = (s, e, t) => (oe(s, typeof e != \"symbol\" ? e + \"\" : e, t), t);\nimport { cb as T, d1 as m, aA as _, bW as C, b3 as f, ax as re, ar as M, d2 as Q, d3 as ae, b2 as S, d4 as ie, d as ce, d5 as X, d6 as N, d7 as de, d8 as Z, d9 as pe, da as ge, db as J, cF as ue, cw as fe } from \"./index-DV1w5RNX.mjs\";\nimport { s as l, A as P, a as le } from \"./algorand-CuJwCvKw.mjs\";\nimport { c as he } from \"./create-Du0Xo8xc.mjs\";\nimport { r as Ae } from \"./chain-tk4BDPwT.mjs\";\nclass me {\n  constructor(e, t, o, n, r = !1) {\n    d(this, \"transaction\");\n    d(this, \"network\");\n    d(this, \"chain\");\n    d(this, \"description\");\n    d(this, \"parallelizable\");\n    this.transaction = e, this.network = t, this.chain = o, this.description = n, this.parallelizable = r;\n  }\n}\nconst W = 1002e3, j = 15, Y = 127, F = 8, K = Y * F, ee = Y * j, V = F * ee, x = {\n  // Forever grateful to https://github.com/joeltg/big-varint/blob/main/src/unsigned.ts\n  _limit: 127,\n  encodingLength: (s) => {\n    let e = 0;\n    for (; s >= 128; e++)\n      s >>= 7;\n    return e + 1;\n  },\n  encode: (s, e, t) => {\n    if (typeof s == \"bigint\" && (s = l(s)), s < 0)\n      throw new RangeError(\"value must be unsigned\");\n    const o = x.encodingLength(s);\n    if (e = e || new ArrayBuffer(o), t = t || 0, e.byteLength < t + o)\n      throw new RangeError(\"the buffer is too small to encode the number at the offset\");\n    const n = new Uint8Array(e, t);\n    let r = 0;\n    for (; x._limit < s; )\n      n[r++] = s & x._limit | 128, s >>= 7;\n    return n[r] = Number(s), n;\n  },\n  decode: (s, e = 0) => {\n    let t = 0, o = 0, n;\n    do {\n      if (n = s[e + o], n === void 0)\n        throw new RangeError(\"offset out of range\");\n      t += (n & x._limit) << o * 7, o++;\n    } while (128 <= n);\n    return t;\n  }\n}, g = {\n  // Get the storage lsig for a Wormhole message ID\n  forMessageId: (s, e) => {\n    const t = T(m(s)).publicKey, o = e.emitter.toUniversalAddress().toUint8Array(), n = _.toBytes(BigInt(C(e.chain)), 2), r = f.concat(n, o);\n    return g.fromData({\n      appId: s,\n      appAddress: t,\n      idx: e.sequence / BigInt(V),\n      address: r\n    });\n  },\n  // Get the storage lsig for a wrapped asset\n  forWrappedAsset: (s, e) => {\n    if (re(e.address))\n      throw new Error(\"native asset cannot be a wrapped asset\");\n    const t = T(m(s)).publicKey;\n    return g.fromData({\n      appId: s,\n      appAddress: t,\n      idx: BigInt(C(e.chain)),\n      address: e.address.toUniversalAddress().toUint8Array()\n    });\n  },\n  // Get the storage lsig for a native asset\n  forNativeAsset: (s, e) => {\n    const t = T(m(s)).publicKey;\n    return g.fromData({\n      appId: s,\n      appAddress: t,\n      idx: e,\n      address: f.encode(\"native\")\n    });\n  },\n  // Get the storage lsig for the guardian set\n  forGuardianSet: (s, e) => {\n    const t = T(m(s)).publicKey;\n    return g.fromData({\n      appId: s,\n      appAddress: t,\n      idx: BigInt(e),\n      address: f.encode(\"guardian\")\n    });\n  },\n  forEmitter: (s, e) => {\n    const t = T(m(s)).publicKey;\n    return g.fromData({\n      appId: s,\n      appAddress: t,\n      idx: 0n,\n      address: e\n    });\n  },\n  _encode: (s) => typeof s == \"bigint\" ? [M.encode(x.encode(s))] : [M.encode(x.encode(s.length)), M.encode(s)],\n  fromData: (s) => {\n    const e = [\n      \"0620010181\",\n      ...g._encode(s.idx),\n      \"4880\",\n      ...g._encode(s.address),\n      \"483110810612443119221244311881\",\n      ...g._encode(s.appId),\n      \"1244312080\",\n      ...g._encode(s.appAddress),\n      \"124431018100124431093203124431153203124422\"\n    ], t = M.decode(e.join(\"\"));\n    return new Q(t);\n  },\n  /**\n   * Returns the local data for an application ID\n   * @param client Algodv2 client\n   * @param appId Application ID of interest\n   * @param address Address of the account\n   * @returns Promise with Uint8Array of data squirreled away\n   */\n  decodeLocalState: async (s, e, t) => {\n    let o;\n    try {\n      const a = await s.accountApplicationInformation(t, l(e)).do();\n      o = ae.from_obj_for_encoding(a).appLocalState;\n    } catch {\n      return new Uint8Array();\n    }\n    const n = S.encode(\"meta\");\n    let r = /* @__PURE__ */ new Map();\n    for (const a of o.keyValue) {\n      if (a.key === n)\n        continue;\n      const p = S.decode(a.key)[0], u = S.decode(a.value.bytes);\n      r.set(p, u);\n    }\n    const c = [];\n    for (let a = 0; a < j; a++)\n      r.has(a) && c.push(r.get(a));\n    return f.concat(...c);\n  },\n  /**\n   * This function is used to check if a VAA has been redeemed by looking at a specific bit\n   * @param client AlgodV2 client\n   * @param appId Application Id\n   * @param addr Wallet address. Someone has to pay for this\n   * @param seq The sequence number of the redemption\n   * @returns True, if the bit was set and VAA was redeemed, False otherwise\n   */\n  checkBitsSet: async (s, e, t, o) => {\n    let n = !1, r;\n    const c = await s.accountInformation(t).do(), p = ie.from_obj_for_encoding(c).appsLocalState;\n    if (p && p.forEach((y) => {\n      BigInt(y.id) === e && (r = y.keyValue);\n    }), (r == null ? void 0 : r.length) === 0)\n      return n;\n    const u = BigInt(V), A = BigInt(8), I = o / u * u, w = l(o - I), B = Math.floor(w / K), b = Math.floor((w - B * K) / 8), U = S.encode(_.toBytes(B, 1));\n    return r == null || r.forEach((y) => {\n      if (y.key === U) {\n        const v = ce.Buffer.from(y.value.bytes, \"base64\"), E = 1 << l(o % A);\n        n = (v[b] & E) != 0;\n        return;\n      }\n    }), n;\n  },\n  /**\n   * Checks to see if the account exists for the application\n   * @param client An Algodv2 client\n   * @param appId Application ID\n   * @param acctAddr Account address to check\n   * @returns True, if account exists for application, False otherwise\n   */\n  storageAccountExists: async (s, e, t) => {\n    try {\n      const o = await s.accountApplicationInformation(e, l(t)).do();\n      return Object.keys(o).length > 0;\n    } catch {\n    }\n    return !1;\n  }\n}, i = class i {\n  constructor(e, t, o, n) {\n    d(this, \"network\");\n    d(this, \"chain\");\n    d(this, \"connection\");\n    d(this, \"contracts\");\n    d(this, \"chainId\");\n    d(this, \"coreAppId\");\n    d(this, \"coreAppAddress\");\n    d(this, \"tokenBridgeAppId\");\n    d(this, \"tokenBridgeAppAddress\");\n    if (this.network = e, this.chain = t, this.connection = o, this.contracts = n, this.chainId = C(t), !n.coreBridge)\n      throw new Error(`Core contract address for chain ${t} not found`);\n    const r = BigInt(n.coreBridge);\n    if (this.coreAppId = r, this.coreAppAddress = m(r), !n.tokenBridge)\n      throw new Error(`TokenBridge contract address for chain ${t} not found`);\n    const c = BigInt(n.tokenBridge);\n    this.tokenBridgeAppId = c, this.tokenBridgeAppAddress = m(c);\n  }\n  getGuardianSet(e) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async *verifyMessage(e, t, o) {\n    const n = new P(e).toString(), r = await i.submitVAAHeader(this.connection, this.coreAppId, o ?? this.coreAppId, t, n);\n    for (const c of r.txs)\n      yield this.createUnsignedTx(c, \"Core.verifyMessage\");\n  }\n  static async fromRpc(e, t) {\n    const [o, n] = await le.chainFromRpc(e), r = t[n];\n    if (r.network !== o)\n      throw new Error(`Network mismatch: ${r.network} !== ${o}`);\n    return new i(o, n, e, r.contracts);\n  }\n  async *publishMessage(e, t) {\n    const o = new P(e), n = o.toString(), r = await this.connection.getTransactionParams().do(), c = g.forEmitter(this.coreAppId, o.toUint8Array()), { accounts: a, txs: p } = await i.maybeCreateStorageTx(this.connection, n, this.coreAppId, c, r);\n    for (const A of p)\n      yield this.createUnsignedTx(A, \"Core.publishMessage\", !0);\n    const u = X({\n      from: n,\n      appIndex: l(this.coreAppId),\n      appArgs: [i.publishMessage, t, _.toBytes(0n, 8)],\n      accounts: a,\n      onComplete: N.NoOpOC,\n      suggestedParams: r\n    });\n    yield this.createUnsignedTx({ tx: u }, \"Core.publishMessage\", !0);\n  }\n  /**\n   * Return the message fee for the core bridge\n   * @param client An Algodv2 client\n   * @param bridgeId The application ID of the core bridge\n   * @returns Promise with the message fee for the core bridge\n   */\n  async getMessageFee() {\n    var n;\n    const e = await this.connection.getApplicationByID(l(this.coreAppId)).do(), o = (n = de.from_obj_for_encoding(e).params.globalState) == null ? void 0 : n.find((r) => r.key === i.feeKey);\n    return o ? BigInt(o.value.uint) : 0n;\n  }\n  async getGuardianSetIndex() {\n    throw new Error(\"Not implemented\");\n  }\n  async parseTransaction(e) {\n    const t = await this.connection.pendingTransactionInformation(e).do(), o = Z.from_obj_for_encoding(t);\n    return this.parseTx(o).map((n) => ({\n      chain: n.emitterChain,\n      emitter: n.emitterAddress,\n      sequence: n.sequence\n    }));\n  }\n  async parseMessages(e) {\n    const t = await this.connection.pendingTransactionInformation(e).do(), o = Z.from_obj_for_encoding(t);\n    return this.parseTx(o);\n  }\n  parseTx(e) {\n    const t = [];\n    if (e.innerTxns && e.innerTxns.length > 0 && t.push(...e.innerTxns.flatMap((p) => this.parseTx(p))), BigInt(e.txn.txn.apid ?? 0) !== this.coreAppId || !e.logs || e.logs.length === 0)\n      return t;\n    const o = e.txn.txn.apaa ?? [];\n    if (o.length !== 3 || !f.equals(new Uint8Array(o[0]), i.publishMessage))\n      return t;\n    const n = _.decode(e.logs[0]), r = new P(e.txn.txn.snd).toUniversalAddress(), c = new Uint8Array(o[1]), a = _.decode(o[2]);\n    return t.push(he(\"Uint8Array\", {\n      emitterChain: this.chain,\n      emitterAddress: r,\n      sequence: n,\n      guardianSet: 0,\n      // TODO: should we get this from the contract on init?\n      timestamp: 0,\n      // TODO: Would need to get the full block to get the timestamp\n      consistencyLevel: 0,\n      nonce: Number(a),\n      payload: c,\n      signatures: []\n    })), t;\n  }\n  /**\n   * Constructs opt in transactions\n   * @param client An Algodv2 client\n   * @param senderAddr Sender address\n   * @param appId Application ID\n   * @param storage StorageLogicSig\n   * @returns Address and array of TransactionSignerPairs\n   */\n  static async maybeCreateStorageTx(e, t, o, n, r) {\n    const c = m(o), a = n.address(), p = [];\n    if (await g.storageAccountExists(e, a, o))\n      return { accounts: [a], txs: p };\n    r = r ?? await e.getTransactionParams().do();\n    const u = pe({\n      from: t,\n      to: a,\n      amount: W,\n      suggestedParams: r\n    });\n    u.fee = u.fee * 2, p.push({ tx: u });\n    const A = ge({\n      from: a,\n      appIndex: l(o),\n      rekeyTo: c,\n      suggestedParams: r\n    });\n    return A.fee = 0, p.push({\n      tx: A,\n      signer: {\n        address: n.address(),\n        signTxn: (I) => Promise.resolve(J(I, n).blob)\n      }\n    }), {\n      accounts: [a],\n      txs: p\n    };\n  }\n  /**\n   * Submits just the header of the VAA\n   * @param client AlgodV2 client\n   * @param bridgeId Application ID of the core bridge\n   * @param vaa The VAA (just the header is used)\n   * @param senderAddr Sending account address\n   * @param appid Application ID\n   * @returns Promise with current VAA state\n   */\n  static async submitVAAHeader(e, t, o, n, r, c) {\n    c = c ?? await e.getTransactionParams().do();\n    let a = [];\n    const p = g.forMessageId(o, {\n      chain: n.emitterChain,\n      sequence: n.sequence,\n      emitter: n.emitterAddress\n    }), { accounts: u, txs: A } = await i.maybeCreateStorageTx(e, r, o, p, c);\n    a.push(...A);\n    const I = g.forGuardianSet(t, n.guardianSet), { accounts: [w], txs: B } = await i.maybeCreateStorageTx(e, r, t, I, c);\n    a.push(...B);\n    let b = [...u, w];\n    const U = await g.decodeLocalState(e, t, w), y = ue(n.hash), v = n.signatures.length, E = Math.ceil(v / i.MAX_SIGS_PER_TXN), G = 20, D = new Q(i.ALGO_VERIFY);\n    for (let O = 0; O < E; O++) {\n      const H = O * i.MAX_SIGS_PER_TXN, k = n.signatures.slice(H, H + i.MAX_SIGS_PER_TXN), te = k.length * G, q = new Uint8Array(te);\n      for (let h = 0; h < k.length; h++) {\n        const $ = k[h], ne = U.slice($.guardianIndex * G + 1, ($.guardianIndex + 1) * G + 1);\n        q.set(ne, h * 20);\n      }\n      const z = X({\n        appArgs: [\n          i.verifySigs,\n          f.concat(...k.map((h) => f.concat(new Uint8Array([h.guardianIndex]), h.signature.encode()))),\n          q,\n          y\n        ],\n        accounts: b,\n        appIndex: l(t),\n        from: i.ALGO_VERIFY_HASH,\n        onComplete: N.NoOpOC,\n        suggestedParams: c\n      });\n      z.fee = 0, a.push({\n        tx: z,\n        signer: {\n          address: D.address(),\n          signTxn: (h) => Promise.resolve(J(h, D).blob)\n        }\n      });\n    }\n    const L = X({\n      appArgs: [i.verifyVaa, fe(n)],\n      accounts: b,\n      appIndex: l(t),\n      from: r,\n      onComplete: N.NoOpOC,\n      suggestedParams: c\n    });\n    return L.fee = L.fee * (2 + E), a.push({ tx: L }), { accounts: b, txs: a };\n  }\n  createUnsignedTx(e, t, o = !0) {\n    return new me(e, this.network, this.chain, t, o);\n  }\n};\nd(i, \"MAX_SIGS_PER_TXN\", 6), d(i, \"ALGO_VERIFY_HASH\", \"EZATROXX2HISIRZDRGXW4LRQ46Z6IUJYYIHU3PJGP7P5IQDPKVX42N767A\"), d(i, \"ALGO_VERIFY\", new Uint8Array([\n  6,\n  32,\n  4,\n  1,\n  0,\n  32,\n  20,\n  38,\n  1,\n  0,\n  49,\n  32,\n  50,\n  3,\n  18,\n  68,\n  49,\n  1,\n  35,\n  18,\n  68,\n  49,\n  16,\n  129,\n  6,\n  18,\n  68,\n  54,\n  26,\n  1,\n  54,\n  26,\n  3,\n  54,\n  26,\n  2,\n  136,\n  0,\n  3,\n  68,\n  34,\n  67,\n  53,\n  2,\n  53,\n  1,\n  53,\n  0,\n  40,\n  53,\n  240,\n  40,\n  53,\n  241,\n  52,\n  0,\n  21,\n  53,\n  5,\n  35,\n  53,\n  3,\n  35,\n  53,\n  4,\n  52,\n  3,\n  52,\n  5,\n  12,\n  65,\n  0,\n  68,\n  52,\n  1,\n  52,\n  0,\n  52,\n  3,\n  129,\n  65,\n  8,\n  34,\n  88,\n  23,\n  52,\n  0,\n  52,\n  3,\n  34,\n  8,\n  36,\n  88,\n  52,\n  0,\n  52,\n  3,\n  129,\n  33,\n  8,\n  36,\n  88,\n  7,\n  0,\n  53,\n  241,\n  53,\n  240,\n  52,\n  2,\n  52,\n  4,\n  37,\n  88,\n  52,\n  240,\n  52,\n  241,\n  80,\n  2,\n  87,\n  12,\n  20,\n  18,\n  68,\n  52,\n  3,\n  129,\n  66,\n  8,\n  53,\n  3,\n  52,\n  4,\n  37,\n  8,\n  53,\n  4,\n  66,\n  255,\n  180,\n  34,\n  137\n])), // global state key for message fee\nd(i, \"feeKey\", S.encode(\"MessageFee\")), // method selector for verifying a VAA\nd(i, \"verifyVaa\", f.encode(\"verifyVAA\")), // method selector for verifying signatures of a VAA\nd(i, \"verifySigs\", f.encode(\"verifySigs\")), // method selector string for publishing a message\nd(i, \"publishMessage\", f.encode(\"publishMessage\"));\nlet R = i;\nAe(\"Algorand\", \"WormholeCore\", R);\nconst Te = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  AlgorandWormholeCore: R,\n  BITS_PER_BYTE: F,\n  BITS_PER_KEY: K,\n  MAX_BITS: V,\n  MAX_BYTES: ee,\n  MAX_BYTES_PER_KEY: Y,\n  MAX_KEYS: j,\n  SEED_AMT: W,\n  StorageLogicSig: g,\n  varint: x\n}, Symbol.toStringTag, { value: \"Module\" }));\nexport {\n  R as A,\n  g as S,\n  me as a,\n  Te as i\n};\n"],"names":["a","o","r","binary","custom","t","from","e","layout","omit","d","y","to","Array","isArray","map","idTag","s","n","layouts","find","_ref","c","f","name","i","u","h","F","b","A","protocolName","payloadName","payloadLiteral","L","hash","p","x","J","Object","defineProperty","O","Q","enumerable","configurable","writable","value","V","Y","fromSignature","constructor","this","network","chain","connection","contracts","chainId","$","coreBridge","Error","BigInt","coreAppId","coreAppAddress","q","tokenBridge","tokenBridgeAppId","tokenBridgeAddress","fromRpc","nt","chainFromRpc","isWrappedAsset","l","toInt","getAssetByID","do","_","from_obj_for_encoding","params","creator","accountInformation","exclude","authAddr","getOriginalAsset","g","decodeLocalState","length","slice","Z","S","decode","address","tt","getWrappedAsset","forWrappedAsset","H","toString","hasWrappedAsset","getWrappedNative","isTransferCompleted","forMessageId","sequence","emitterChain","emitter","emitterAddress","checkBitsSet","createAttestation","getTransactionParams","forEmitter","toUint8Array","accounts","txs","w","maybeCreateStorageTx","push","m","U","E","T","forNativeAsset","B","I","appIndex","onComplete","k","NoOpOC","appArgs","noop","suggestedParams","tx","getMessageFee","W","amount","j","attestToken","toBytes","foreignApps","foreignAssets","fee","createUnsignedTx","submitAttestation","payload","token","Uint8Array","receiveAttest","D","transfer","et","toUniversalAddress","fromData","appId","appAddress","K","publicKey","idx","R","N","isOptedInToAsset","optIn","st","unshift","G","z","assetIndex","P","sendTransfer","v","redeem","_this","arguments","undefined","submitVAAHeader","toBigInt","completeTransfer","appForeignApps","getSelector","args","type","encode","Promise","reject","accountAssetInformation","ot","assetHolding","X","C","M","at","rt","se","oe","me","transaction","description","parallelizable","_limit","encodingLength","RangeError","ArrayBuffer","byteLength","Number","concat","re","forGuardianSet","_encode","join","async","accountApplicationInformation","ae","appLocalState","Map","keyValue","key","bytes","set","has","get","ie","appsLocalState","forEach","id","Math","floor","ce","Buffer","storageAccountExists","keys","tokenBridgeAppAddress","getGuardianSet","verifyMessage","le","publishMessage","getApplicationByID","de","globalState","feeKey","uint","getGuardianSetIndex","parseTransaction","pendingTransactionInformation","parseTx","parseMessages","innerTxns","flatMap","txn","apid","logs","apaa","equals","snd","he","guardianSet","timestamp","consistencyLevel","nonce","signatures","pe","ge","rekeyTo","signer","signTxn","resolve","blob","ue","ceil","MAX_SIGS_PER_TXN","ALGO_VERIFY","te","ne","guardianIndex","verifySigs","signature","ALGO_VERIFY_HASH","verifyVaa","fe","Ae","Te","freeze","__proto__","AlgorandWormholeCore","BITS_PER_BYTE","BITS_PER_KEY","MAX_BITS","MAX_BYTES","MAX_BYTES_PER_KEY","MAX_KEYS","SEED_AMT","StorageLogicSig","varint","Symbol","toStringTag"],"sourceRoot":""}