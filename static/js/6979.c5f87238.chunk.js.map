{"version":3,"file":"static/js/6979.c5f87238.chunk.js","mappings":"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","sources":["../node_modules/@wormhole-foundation/wormhole-connect/lib/create-Du0Xo8xc.mjs","../node_modules/@wormhole-foundation/wormhole-connect/lib/index-1UYO6C7i.mjs","../node_modules/@wormhole-foundation/wormhole-connect/lib/index-BCg5kiin.mjs","../node_modules/@wormhole-foundation/wormhole-connect/lib/unsignedTransaction-DMQTL-mr.mjs"],"sourcesContent":["import { cW as f, cX as d, cY as y, cZ as A, cF as p, cT as x, c_ as h, c$ as F, d0 as L } from \"./index-DV1w5RNX.mjs\";\nfunction a(o, r) {\n  switch (o.binary) {\n    case \"bytes\":\n      if (\"layout\" in o) {\n        const { custom: t } = o;\n        return t === void 0 || typeof t.from != \"function\" ? e(o.layout, t ? t.from : r) : r;\n      }\n    case \"int\":\n    case \"uint\": {\n      const { custom: t } = o;\n      return o != null && o.omit ? void 0 : d(t) ? t : y(t) ? t.to : r;\n    }\n    case \"array\":\n      return Array.isArray(r) ? r.map((t) => e(o.layout, t)) : void 0;\n    case \"switch\": {\n      const t = r[o.idTag ?? \"id\"], [s, n] = o.layouts.find(([c]) => (Array.isArray(c) ? c[1] : c) == t);\n      return {\n        [o.idTag ?? \"id\"]: t,\n        ...e(n, r)\n      };\n    }\n  }\n}\nfunction e(o, r) {\n  if (r = r ?? {}, f(o))\n    return a(o, r);\n  const t = {};\n  for (const s of o) {\n    const n = a(s, r[s.name] ?? {});\n    n !== void 0 && (t[s.name] = n);\n  }\n  return t;\n}\nfunction i(o, r) {\n  return e(o, r);\n}\nfunction u(o) {\n  return [...h, F(o)];\n}\nfunction b(o, r) {\n  const [t, s] = A(o), n = i(u(o), r);\n  return {\n    protocolName: t,\n    payloadName: s,\n    payloadLiteral: o,\n    ...i(L, r),\n    ...n,\n    hash: p(x(u(o), n))\n  };\n}\nexport {\n  b as c\n};\n","var m = Object.defineProperty;\nvar w = (c, e, r) => e in c ? m(c, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : c[e] = r;\nvar a = (c, e, r) => (w(c, typeof e != \"symbol\" ? e + \"\" : e, r), r);\nimport { C as p, _ as g } from \"./cosmwasm-DHfd5lcQ.mjs\";\nimport { c as l } from \"./create-Du0Xo8xc.mjs\";\nimport { as as u, ar as h } from \"./index-DV1w5RNX.mjs\";\nimport { r as f } from \"./chain-tk4BDPwT.mjs\";\nclass i {\n  constructor(e, r, s, t) {\n    a(this, \"network\");\n    a(this, \"chain\");\n    a(this, \"rpc\");\n    a(this, \"contracts\");\n    a(this, \"coreAddress\");\n    this.network = e, this.chain = r, this.rpc = s, this.contracts = t;\n    const n = this.contracts.coreBridge;\n    if (!n)\n      throw new Error(`Wormhole Token Bridge contract for domain ${r} not found`);\n    this.coreAddress = n;\n  }\n  getGuardianSet(e) {\n    throw new Error(\"Method not implemented.\");\n  }\n  getGuardianSetIndex() {\n    throw new Error(\"Method not implemented.\");\n  }\n  getMessageFee() {\n    throw new Error(\"Method not implemented.\");\n  }\n  static async fromRpc(e, r) {\n    const [s, t] = await p.chainFromRpc(e), n = r[t];\n    if (n.network !== s)\n      throw new Error(`Network mismatch: ${n.network} != ${s}`);\n    return new i(s, t, e, n.contracts);\n  }\n  async *publishMessage(e, r, s, t) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async *verifyMessage(e, r) {\n    throw new Error(\"Not implemented.\");\n  }\n  async parseTransaction(e) {\n    const r = await this.rpc.getTx(e);\n    if (!r)\n      throw new Error(\"No transaction found for txid: \" + e);\n    return [i.parseWormholeMessageId(this.chain, this.coreAddress, r)];\n  }\n  async parseMessages(e) {\n    const r = await this.rpc.getTx(e);\n    if (!r)\n      throw new Error(\"No transaction found for txid: \" + e);\n    return [i.parseWormholeMessage(this.chain, this.coreAddress, r)];\n  }\n  static parseWormholeMessage(e, r, s) {\n    const t = s.events.filter((o) => o.type === \"wasm\" && o.attributes[0].key === \"_contract_address\" && o.attributes[0].value === r);\n    if (t.length === 0)\n      throw new Error(\"No wormhole message found in tx\");\n    t.length > 1 && console.error(`Expected single message, found ${t.length}`);\n    const [n] = t, d = Object.fromEntries(n.attributes.map((o) => [o.key.split(\".\")[1], o.value]));\n    return l(\"Uint8Array\", {\n      emitterChain: e,\n      emitterAddress: new u(h.decode(d.sender)),\n      sequence: BigInt(d.sequence),\n      guardianSet: 0,\n      // TODO: need to implement guardian set idx\n      timestamp: Number(d.block_time),\n      consistencyLevel: 0,\n      nonce: Number(d.nonce),\n      signatures: [],\n      payload: h.decode(d.message)\n    });\n  }\n  static parseWormholeMessageId(e, r, s) {\n    const t = i.parseWormholeMessage(e, r, s);\n    return {\n      chain: t.emitterChain,\n      emitter: t.emitterAddress,\n      sequence: t.sequence\n    };\n  }\n}\nf(g, \"WormholeCore\", i);\nexport {\n  i as CosmwasmWormholeCore\n};\n","var N = Object.defineProperty;\nvar W = (h, t, e) => t in h ? N(h, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : h[t] = e;\nvar c = (h, t, e) => (W(h, typeof t != \"symbol\" ? t + \"\" : t, e), e);\nimport \"./index-1UYO6C7i.mjs\";\nimport { C as p, a as i, G as v, _ as x } from \"./cosmwasm-DHfd5lcQ.mjs\";\nimport { b as o, c as w, C as E } from \"./unsignedTransaction-DMQTL-mr.mjs\";\nimport { ax as u, b2 as d, bW as B, cj as S, cE as q, as as I, cw as y } from \"./index-DV1w5RNX.mjs\";\nimport { r as D } from \"./chain-tk4BDPwT.mjs\";\nclass k {\n  constructor(t, e, r, s) {\n    c(this, \"network\");\n    c(this, \"chain\");\n    c(this, \"rpc\");\n    c(this, \"contracts\");\n    c(this, \"tokenBridge\");\n    c(this, \"translator\");\n    this.network = t, this.chain = e, this.rpc = r, this.contracts = s;\n    const n = this.contracts.tokenBridge;\n    if (!n)\n      throw new Error(`Wormhole Token Bridge contract for domain ${e} not found`);\n    if (this.tokenBridge = n, this.translator = this.contracts.translator, this.translator !== void 0 && this.translator === \"\")\n      throw new Error(\"Translator address may be undefined but not empty string\");\n  }\n  static async fromRpc(t, e) {\n    const [r, s] = await p.chainFromRpc(t), n = e[s];\n    if (n.network !== r)\n      throw new Error(`Network mismatch: ${n.network} != ${r}`);\n    return new k(r, s, t, e[s].contracts);\n  }\n  async isWrappedAsset(t) {\n    try {\n      return await this.getOriginalAsset(t), !0;\n    } catch {\n    }\n    return !1;\n  }\n  async hasWrappedAsset(t) {\n    try {\n      return await this.getWrappedAsset(t), !0;\n    } catch {\n    }\n    return !1;\n  }\n  async getWrappedAsset(t) {\n    if (t.chain === this.chain)\n      throw new Error(`Expected foreign chain, got ${t.chain}`);\n    if (u(t.address))\n      throw new Error(\"Native asset cannot be a wrapped asset\");\n    const e = d.encode(t.address.toUniversalAddress().toUint8Array()), { address: r } = await this.rpc.queryContractSmart(this.tokenBridge, {\n      wrapped_registry: {\n        chain: B(t.chain),\n        address: e\n      }\n    });\n    return S(this.chain, r);\n  }\n  async getOriginalAsset(t) {\n    let e = new i(t);\n    e.denomType === \"factory\" && (e = v.factoryToCw20(e));\n    const r = await this.rpc.queryContractSmart(e.toString(), {\n      wrapped_asset_info: {}\n    }), s = q(r.asset_chain), n = d.decode(r.asset_address);\n    return {\n      chain: s,\n      address: new I(new Uint8Array(n))\n    };\n  }\n  async isTransferCompleted(t) {\n    const e = d.encode(y(t));\n    return (await this.rpc.queryContractSmart(this.tokenBridge, {\n      is_vaa_redeemed: { vaa: e }\n    })).is_redeemed;\n  }\n  async *createAttestation(t, e) {\n    if (!e)\n      throw new Error(\"Payer required to create attestation\");\n    const r = new i(t).toString(), s = new i(e).toString(), n = 0, g = u(t) ? {\n      native_token: {\n        denom: p.getNativeDenom(this.network, this.chain)\n      }\n    } : {\n      token: { contract_addr: r }\n    };\n    yield this.createUnsignedTx({\n      msgs: [\n        o(s, this.tokenBridge, {\n          create_asset_meta: { asset_info: g, nonce: n }\n        })\n      ],\n      fee: w(this.network, this.chain),\n      memo: \"Wormhole - Create Attestation\"\n    }, \"TokenBridge.createAttestation\");\n  }\n  async *submitAttestation(t, e) {\n    if (!e)\n      throw new Error(\"Payer required to submit attestation\");\n    const r = new i(e).toString();\n    yield this.createUnsignedTx({\n      msgs: [\n        o(r, this.tokenBridge, {\n          submit_vaa: { data: y(t) }\n        })\n      ],\n      fee: w(this.network, this.chain),\n      memo: \"Wormhole - Submit Attestation\"\n    }, \"TokenBridge.submitAttestation\");\n  }\n  async *transfer(t, e, r, s, n) {\n    const g = Math.round(Math.random() * 1e5), f = \"0\", C = B(e.chain), b = d.encode(e.address.toUniversalAddress().toUint8Array()), U = p.getNativeDenom(this.network, this.chain), _ = u(r);\n    let a = _ ? U : r.toString();\n    a.startsWith(\"factory\") && (a = v.factoryToCw20(new i(a)).toString());\n    const l = new i(t).toString(), A = (m) => {\n      const T = {\n        asset: {\n          amount: s.toString(),\n          info: m\n        },\n        recipient_chain: C,\n        recipient: b,\n        fee: f,\n        nonce: g\n      };\n      return n ? {\n        initiate_transfer_with_payload: { ...T, payload: d.encode(n) }\n      } : {\n        initiate_transfer: T\n      };\n    };\n    if (_) {\n      const m = [\n        o(l, this.tokenBridge, { deposit_tokens: {} }, [\n          { amount: s.toString(), denom: a }\n        ]),\n        o(l, this.tokenBridge, A({\n          native_token: { denom: a }\n        }))\n      ];\n      yield this.createUnsignedTx({\n        msgs: m,\n        fee: w(this.network, this.chain),\n        memo: \"Wormhole - Initiate Native Transfer\"\n      }, \"TokenBridge.transferNative\");\n    } else {\n      const m = [\n        o(l, a, {\n          increase_allowance: {\n            spender: this.tokenBridge,\n            amount: s.toString(),\n            expires: { never: {} }\n          }\n        }),\n        o(l, this.tokenBridge, A({\n          token: { contract_addr: a }\n        }), [{ amount: s.toString(), denom: a }])\n      ];\n      yield this.createUnsignedTx({\n        msgs: m,\n        fee: w(this.network, this.chain),\n        memo: \"Wormhole - Initiate Transfer\"\n      }, \"TokenBridge.transfer\");\n    }\n  }\n  async *redeem(t, e, r = !0) {\n    const s = d.encode(y(e)), n = new i(t).toString(), f = this.translator && new i(this.translator).toUniversalAddress().equals(e.payload.to.address) ? o(n, this.translator, {\n      complete_transfer_and_convert: {\n        vaa: s\n      }\n    }) : o(n, this.tokenBridge, {\n      submit_vaa: { data: s }\n    });\n    yield this.createUnsignedTx({\n      msgs: [f],\n      fee: w(this.network, this.chain),\n      memo: \"Wormhole - Complete Transfer\"\n    }, \"TokenBridge.redeem\");\n  }\n  async parseTransactionDetails(t) {\n    throw new Error(\"Not implemented\");\n  }\n  async getWrappedNative() {\n    return S(this.chain, p.getNativeDenom(this.network, this.chain));\n  }\n  createUnsignedTx(t, e, r = !1) {\n    return new E(t, this.network, this.chain, e, r);\n  }\n}\nD(x, \"TokenBridge\", k);\nexport {\n  k as CosmwasmTokenBridge\n};\n","var o = Object.defineProperty;\nvar c = (e, a, t) => a in e ? o(e, a, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[a] = t;\nvar s = (e, a, t) => (c(e, typeof a != \"symbol\" ? a + \"\" : a, t), t);\nimport { l, m, D as u, C as f, M as g } from \"./cosmwasm-DHfd5lcQ.mjs\";\nimport { bT as p, b3 as E } from \"./index-DV1w5RNX.mjs\";\nfunction T(e, a) {\n  let t = l.get(e, a);\n  return t || (t = \"0.1\"), m.calculateFee(u * 1.5, `${t}${f.getNativeDenom(e, a)}`);\n}\nfunction h(e, a, t, r) {\n  return {\n    typeUrl: g,\n    value: p.MsgExecuteContract.fromPartial({\n      sender: e,\n      contract: a,\n      msg: E.encode(JSON.stringify(t)),\n      funds: r\n    })\n  };\n}\nclass F {\n  constructor(a, t, r, i, n = !1) {\n    s(this, \"transaction\");\n    s(this, \"network\");\n    s(this, \"chain\");\n    s(this, \"description\");\n    s(this, \"parallelizable\");\n    this.transaction = a, this.network = t, this.chain = r, this.description = i, this.parallelizable = n;\n  }\n}\nexport {\n  F as C,\n  h as b,\n  T as c\n};\n"],"names":["a","o","r","binary","custom","t","from","e","layout","omit","d","y","to","Array","isArray","map","idTag","s","n","layouts","find","_ref","c","f","name","i","u","h","F","b","A","protocolName","payloadName","payloadLiteral","L","hash","p","x","m","Object","defineProperty","w","enumerable","configurable","writable","value","constructor","this","network","chain","rpc","contracts","coreBridge","Error","coreAddress","getGuardianSet","getGuardianSetIndex","getMessageFee","fromRpc","chainFromRpc","publishMessage","verifyMessage","parseTransaction","getTx","parseWormholeMessageId","parseMessages","parseWormholeMessage","events","filter","type","attributes","key","length","console","error","fromEntries","split","l","emitterChain","emitterAddress","decode","sender","sequence","BigInt","guardianSet","timestamp","Number","block_time","consistencyLevel","nonce","signatures","payload","message","emitter","g","N","W","k","tokenBridge","translator","isWrappedAsset","getOriginalAsset","hasWrappedAsset","getWrappedAsset","address","encode","toUniversalAddress","toUint8Array","queryContractSmart","wrapped_registry","B","S","denomType","v","factoryToCw20","toString","wrapped_asset_info","q","asset_chain","asset_address","I","Uint8Array","isTransferCompleted","is_vaa_redeemed","vaa","is_redeemed","createAttestation","native_token","denom","getNativeDenom","token","contract_addr","createUnsignedTx","msgs","create_asset_meta","asset_info","fee","memo","submitAttestation","submit_vaa","data","transfer","Math","round","random","C","U","_","startsWith","T","asset","amount","info","recipient_chain","recipient","initiate_transfer_with_payload","initiate_transfer","deposit_tokens","increase_allowance","spender","expires","never","redeem","_this","equals","complete_transfer_and_convert","Promise","reject","parseTransactionDetails","getWrappedNative","arguments","undefined","E","D","get","calculateFee","typeUrl","MsgExecuteContract","fromPartial","contract","msg","JSON","stringify","funds","transaction","description","parallelizable"],"sourceRoot":""}